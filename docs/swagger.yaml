basePath: /
definitions:
  dto.CreateProductInput:
    properties:
      name:
        type: string
      price:
        type: number
    type: object
  dto.CreateUserInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  dto.GenUserJwtInput:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.GenUserJwtOutput:
    properties:
      access_token:
        type: string
    type: object
  entity.Product:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  handlers.Error:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@pcpedroso.com.br
    name: API Support
    url: http://www.pcpedroso.com.br
  description: Product API with authentication.
  license:
    name: PCPedroso
    url: http://www.pcpedroso.com.br
  termsOfService: http://swagger.io/terms/
  title: Go Expert API Example
  version: "1.0"
paths:
  /products:
    get:
      consumes:
      - application/json
      description: get all Products
      parameters:
      - description: page number
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Product'
            type: array
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: List Products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create Product
      parameters:
      - description: product request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Create Product
      tags:
      - products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Product
      parameters:
      - description: product ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete Product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get Product
      parameters:
      - description: product ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Product'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Get Product
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update Product
      parameters:
      - description: product ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: product request
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Update Product
      tags:
      - products
  /users:
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Create User
      tags:
      - users
  /users/gen_token:
    post:
      consumes:
      - application/json
      description: Get User JWT
      parameters:
      - description: user credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.GenUserJwtInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GenUserJwtOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get User JWT
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
